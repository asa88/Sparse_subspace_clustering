
function c = SparseCoefRecovery(Xp,cst,Opt,lambda,i)

if (nargin < 2)
    cst = 0;
end
if (nargin < 3)
    Opt = 'Lasso';
end
if (nargin < 4)
    lambda = 0.001;
end

D = size(Xp,1);
N = size(Xp,2);

%for i = 1:N
    
    y = Xp(:,i);
    if i == 1
        Y = Xp(:,i+1:end);
    elseif ( (i > 1) && (i < N) )
        Y = [Xp(:,1:i-1) Xp(:,i+1:N)];        
    else
        Y = Xp(:,1:N-1);
    end
    
    % L1 optimization using CVX
    
    if ( strcmp(Opt , 'Lasso') )
        cvx_begin;
        cvx_precision high
        variable c(N-1,1);
        minimize( norm(c,1) + lambda * norm(Y * c  - y) );
        cvx_end;
    end
